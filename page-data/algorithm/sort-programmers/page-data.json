{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/sort-programmers/","result":{"data":{"site":{"siteMetadata":{"title":"42Log"}},"markdownRemark":{"id":"7b73c59a-f3ca-55ed-bbcc-74dc20de01ff","excerpt":"프로그래머스 Level 2 정렬 문제 문제 설명 0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요. 예를 들어, 주어진 정수가 6, 10, 2라면 6102, 6210, 1062, 1026, 2610, 210…","html":"<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42746\">프로그래머스 Level 2 정렬 문제</a></p>\n<h4>문제 설명</h4>\n<p>0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.</p>\n<p>예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.</p>\n<p>0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.</p>\n<h4>제한 사항</h4>\n<ul>\n<li>numbers의 길이는 1 이상 100,000 이하입니다.</li>\n<li>numbers의 원소는 0 이상 1,000 이하입니다.</li>\n<li>정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.</li>\n</ul>\n<h4>입출력 예</h4>\n<table>\n<thead>\n<tr>\n<th>numbers</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[6, 10, 2]</td>\n<td>“6210”</td>\n</tr>\n<tr>\n<td>[3, 30, 34, 5, 9]</td>\n<td>“9534330”</td>\n</tr>\n</tbody>\n</table>\n<h4>풀이</h4>\n<p>일단 나는 배열 각 요소의 맨 앞자리 수를 기준으로 내림차순 정렬을 하려고 했다. 그 경우, 앞자리 숫자가 같을 때 그 다음 자리수를 반복하여 계속 비교해야한다. 만약 두 요소의 자리수가 다른 경우 비교하는 방법은 더 복잡해진다. 문자열의 형태로 이어붙였을 때 어떻게 해야 더 큰 수가 나오게끔 정렬할 수 있을까. 도저히 방법을 찾지 못해 구글링해보니 매우 매우 간단한 방법으로 해결할 수 있었음..  </p>\n<p>문자열 형태로 이어붙였을 때 커지는 숫자를 만들어야하는 게 이 문제의 핵심이기 때문에, 두 요소의 비교 또한 문자열 형태로 이어붙진 다음에 큰 순서대로 정렬하면 되는 것이었다. 두 수의 크기를 비교하는 아이디어, 배열의 sort() 메서드 작동원리를 잘 이해하고 있는 것이 중요했다. 풀이 순서는,  </p>\n<ol>\n<li>number 타입의 요소들을 string 타입으로 변환 후,</li>\n<li>요소를 앞뒤로 더했을 때, 큰 값을 만들어내는 순으로 정렬한다.</li>\n<li>배열의 요소를 하나의 문자열로 합친다.</li>\n</ol>\n<p><strong>그런데</strong>, 테스트 케이스 하나를 통과하지 못했다. 문제를 다시 잘 읽어보면, 모든 요소가 0인 경우도 가능하다. 이때 answer는 ‘0000..’이 반환되기 때문에 이 부분도 처리해줘야 한다.</p>\n<h4>코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numbers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    \n    answer <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span><span class=\"token operator\">=></span>el<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">+</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">===</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>프로그래머스 정답 풀이를 보니 신박한 방법들이 많다.<br>\n숫자를 문자열로 바꿀 때 <code class=\"language-text\">el + &#39;&#39;</code>를 사용하거나 sort() 함수 내에서 a,b를 <code class=\"language-text\">템플릿 리터럴</code>로 감싸는 방법,<br>\n마지막 0을 처리할 때 <code class=\"language-text\">삼항연산자</code>, <code class=\"language-text\">정규표현식</code>을 사용하는 방법 등등</p>\n<p>갈 길이 멀다.</p>","frontmatter":{"title":"[알고리즘] 정렬 - 가장 큰 수","date":"April 24, 2021","description":null}},"previous":{"fields":{"slug":"/tutorials/npm/"},"frontmatter":{"title":"[Docs] npm이 뭐지?"}},"next":{"fields":{"slug":"/TIL/express_static/"},"frontmatter":{"title":"[TIL] Express 프레임워크를 도입한 계기 : 정적 파일 서빙"}}},"pageContext":{"id":"7b73c59a-f3ca-55ed-bbcc-74dc20de01ff","previousPostId":"b24fc3fc-7b09-574d-aa39-f5cda5fee0c9","nextPostId":"dfde0b3a-e5fc-5497-a6c5-2f7f02272bb0"}},"staticQueryHashes":["2841359383","3257411868"]}