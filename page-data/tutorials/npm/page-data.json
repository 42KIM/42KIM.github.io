{"componentChunkName":"component---src-templates-blog-post-js","path":"/tutorials/npm/","result":{"data":{"site":{"siteMetadata":{"title":"42Log"}},"markdownRemark":{"id":"b24fc3fc-7b09-574d-aa39-f5cda5fee0c9","excerpt":"0. 프로젝트를 위해 Node.js에 대해 알아보기 시작했다. HTML, CSS, JS만 다뤄보다가 Node.js를 접하니 제일 먼저 이라는 게 눈에 띈다. , ,   등등 뭐만 하려고 하면 일단 npm을 사용한다. 블로그를 만들 때  프레임워크도 npm을 통해 설치했다. 어떻게 npm…","html":"<h3>0.</h3>\n<p>프로젝트를 위해 Node.js에 대해 알아보기 시작했다. HTML, CSS, JS만 다뤄보다가 Node.js를 접하니 제일 먼저 <code class=\"language-text\">npm</code>이라는 게 눈에 띈다. <code class=\"language-text\">express</code>, <code class=\"language-text\">nodemon</code>, <code class=\"language-text\">ejs</code>  등등 뭐만 하려고 하면 일단 npm을 사용한다. 블로그를 만들 때 <code class=\"language-text\">gatsby</code> 프레임워크도 npm을 통해 설치했다. 어떻게 npm은 모든 걸 설치해주는 걸까. npm이 도대체 뭐지?</p>\n<h3>1.</h3>\n<p>이번에도 <a href=\"https://docs.npmjs.com/about-npm\">npm Docs</a>를 읽어보기로 한다.  설명에 따르면,</p>\n<blockquote>\n<p>npm은 가장 방대한 소프트웨어 레지스트리이다. 전세계의 오픈소스 개발자들이 <code class=\"language-text\">package</code>를 공유하기 위해 사용하며, 다양한 조직들이 내부 개발에 npm을 사용하기도 한다. npm은 다음 세 가지 요소로 구성된다.</p>\n<blockquote>\n<ol>\n<li>웹사이트<br>\n: npm 웹사이트에서 다양한 패키지를 검색하고, 만들고, 관리할 수 있다.</li>\n<li>CLI (Command Line Interface)<br>\n: npm은 터미널에서 구동한다.</li>\n<li>레지스트리<br>\n: 레지스트리는 자바스크립트 소프트웨어, 관련 메타정보가 담긴 거대한 데이터베이스다. </li>\n</ol>\n</blockquote>\n</blockquote>\n<p>라고 한다.  npm은 <code class=\"language-text\">Node Package Manager</code> 의 준말이다. 근데 여기서 Package란 뭘 뜻하는 걸까?  </p>\n<h3>2.</h3>\n<p>패키지는 공개적으로 사용할 수 있는 코드다. 일반적으로 애플리케이션에 특정 기능들을 추가할 수 있도록 미리 누군가에 의해 만들어진 코드 파일이라고 생각하면 된다. Node.js에서의 패키지는 <code class=\"language-text\">module</code>에 필요한 파일들로 구성되어 있다. 그리고 모듈이란 프로젝트에 추가할 수 있는 <code class=\"language-text\">JavaScript Libraries</code>를 의미한다.  </p>\n<p>결론적으로 npm은 Node.js 환경에서 자바스크립트 라이브러리를 모아두고, 설치와 관리를 돕는 프로그램 정도로 이해하면 될 것 같다. npm을 통해 자신이 작성한 패키지를 공개할 수도 있고, 필요한 패키지를 검색하여 사용할 수도 있는 것이다.</p>\n<h3>3.</h3>\n<p>기본적인 npm 사용법에 대해서 알아보자. npm을 사용하기 위해서는 당연하게도 <code class=\"language-text\">Node.js</code>와 npm 설치가 필요하다. 본인의 컴퓨터에 이미 설치가 되어있는지 여부를 확인하고자 한다면,</p>\n<div class=\"gatsby-highlight\" data-language=\"nodejs\"><pre class=\"language-nodejs\"><code class=\"language-nodejs\">node -v\nnpm -v</code></pre></div>\n<p>를 통해 버전 정보를 확인해보면 된다.  </p>\n<p>패키지를 설치하기 위해서는,</p>\n<div class=\"gatsby-highlight\" data-language=\"nodejs\"><pre class=\"language-nodejs\"><code class=\"language-nodejs\">npm install &#39;패키지 이름&#39;</code></pre></div>\n<p>이렇게 npm install 명령어 뒤에 설치할 패키지 이름을 지정하면 된다.  </p>\n<p>npm을 사용하다 보면 <code class=\"language-text\">npm install -g &#39;패키지 이름&#39;</code> 처럼 명령어 사이에 <code class=\"language-text\">-g</code> 옵션을 추가하는 경우가 있는데, 이는 <strong>패키지의 사용범위</strong>를 나타내는 옵션이다.</p>\n<ul>\n<li>지역(local) 설치<br>\n: 옵션을 별도로 지정하지 않으면 지역으로 설치되며, 프로젝트 루트 디렉토리에 <code class=\"language-text\">node_modules</code> 디렉토리가 자동 생성되고 그 안에 패키지가 설치된다. 지역 설치된 패키지는 <strong>해당 프로젝트 내에서만</strong> 사용할 수 있다.</li>\n<li>전역(global) 설치<br>\n: <code class=\"language-text\">-g</code> 옵션을 지정하여 전역에 설치된 패키지는 <strong>모든 프로젝트가 공통으로</strong> 사용할 수 있다. 윈도우의 경우 <code class=\"language-text\">c:\\Users\\%USERNAME%\\AppData\\Roaming\\npm\\node_modules</code> 디렉토리에 전역 패키지가 설치된다.</li>\n</ul>\n<h3>4.</h3>\n<p>패키지가 npm 레지스트리에 추가되기 위해서는 패키지의 설명이 담긴 <code class=\"language-text\">package.json</code> 파일이 필수적으로 포함되어야 한다. 특히 패키지의 <strong>name</strong>과 <strong>version</strong> 정보가 필수적이다.  </p>\n<p> 또한 Node.js의 패키지는 빈번하게 업데이트된다. 따라서 프로젝트에서 이를 일괄적으로 관리할 필요가 있다. 위에서 언급했던 <code class=\"language-text\">package.json</code> 파일이 그러한 역할을 수행한다. </p>\n<p>패키지를 설치하면 <code class=\"language-text\">package.json</code> - <code class=\"language-text\">dependencies</code>에 패키지의 이름과 버전이 기록된다.</p>\n<h3>5.</h3>\n<p>자주 사용하는 <code class=\"language-text\">npm 명령어</code>로는,</p>\n<div class=\"gatsby-highlight\" data-language=\"nodejs\"><pre class=\"language-nodejs\"><code class=\"language-nodejs\">// package.json 생성 (프로젝트에 대한 여러 가지 정보를 입력하도록 요구받는다)\nnpm init\n\n// 기본 설정값으로 package.json 생성\nnpm init -y\n\n// 패키지 제거\nnpm uninstall 패키지 이름\n\n// 패키지 업데이트\nnpm update 패키지 이름\n\n// 패키지 Docs URL로 연결\nnpm docs 패키지 이름\n\n// 패키지 정보 확인\nnpm view 패키지 이름\n\n// 전역 패키지 설치 폴더 확인\nnpm root -g</code></pre></div>\n<p>등이 있다.</p>\n<h4>참고</h4>\n<p><a href=\"https://docs.npmjs.com/\">npm Docs</a><br>\n<a href=\"https://poiemaweb.com/\">Poiemaweb</a></p>","frontmatter":{"title":"[Docs] npm이 뭐지?","date":"April 22, 2021","description":null}},"previous":{"fields":{"slug":"/tutorials/gatsby-tutorial/"},"frontmatter":{"title":"[Docs] Gatsby로 Github 블로그 만들기"}},"next":{"fields":{"slug":"/algorithm/sort-programmers/"},"frontmatter":{"title":"[알고리즘] 정렬 - 가장 큰 수"}}},"pageContext":{"id":"b24fc3fc-7b09-574d-aa39-f5cda5fee0c9","previousPostId":"4700a52a-5c80-5ba9-a2b5-a7fc6c50f384","nextPostId":"7b73c59a-f3ca-55ed-bbcc-74dc20de01ff"}},"staticQueryHashes":["2841359383","3257411868"]}